{
  "openapi": "3.0.1",
  "info": {
    "title": "NCoding Backend API",
    "description": "Exposes an API to perform actions on Courses, Students and Enrollments",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/students/{id}": {
      "get": {
        "tags": [
          "student-controller"
        ],
        "summary": "Get A student by Id",
        "operationId": "getStudentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "student-controller"
        ],
        "summary": "Updates a student by Id. userId can be updated by this method.",
        "operationId": "updateStudent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "student-controller"
        ],
        "summary": "Deletes an student by Id. It does not delete the user.",
        "operationId": "deleteStudent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "put": {
        "tags": [
          "course-controller"
        ],
        "summary": "Updates a Course using the id",
        "operationId": "updateCourse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Course"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "course-controller"
        ],
        "summary": "Deletes a Course using the id",
        "operationId": "deleteCourse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users/registration": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Register a new User.",
        "operationId": "registerNewUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Gets the user if login was successful",
        "operationId": "doLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/students": {
      "get": {
        "tags": [
          "student-controller"
        ],
        "summary": "Get all students",
        "operationId": "getAllStudents_1",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all students",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                },
                "example": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "student-controller"
        ],
        "summary": "Creates a new Student. Link a userId is optional.",
        "operationId": "createStudent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          }
        }
      }
    },
    "/enrollments/": {
      "post": {
        "tags": [
          "enrollment-controller"
        ],
        "summary": "Enroll a student in a course",
        "operationId": "enrollmentStudentInCourse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Enrollment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          }
        }
      }
    },
    "/courses": {
      "get": {
        "tags": [
          "course-controller"
        ],
        "summary": "Get all available courses for enrollment",
        "operationId": "getAllAvailableCourses",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all available courses for enrollment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                },
                "example": {
                  "id": 1,
                  "name": "Java: First Steps",
                  "description": "The OCP Oracle Certified Professional Java SE 11 Developer Complete Study Guide in an indispensable resource for anyone preparing for the certification exam.",
                  "available": true
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "course-controller"
        ],
        "summary": "Creates a new Course",
        "operationId": "createCourse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Course"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get all users",
        "operationId": "getAllStudents",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {}
              }
            }
          }
        }
      }
    },
    "/enrollments/{studentId}": {
      "get": {
        "tags": [
          "enrollment-controller"
        ],
        "summary": "List All the courses enrollments of a student",
        "operationId": "getEnrollmentsByStudentId",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageEnrollmentResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enrollment-controller"
        ],
        "summary": "Removes the course enrollment from a user.",
        "operationId": "declineEnrollmentByStudentId",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "courseId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Student": {
        "required": [
          "address",
          "docNumber",
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string"
          },
          "docNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "phoneNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Course": {
        "required": [
          "available",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "available": {
            "type": "boolean"
          }
        }
      },
      "UserRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "User": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Enrollment": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/EnrollmentKey"
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EnrollmentKey": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int64"
          },
          "courseId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EnrollmentResponse": {
        "type": "object",
        "properties": {
          "course": {
            "$ref": "#/components/schemas/Course"
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageEnrollmentResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnrollmentResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      }
    }
  }
}